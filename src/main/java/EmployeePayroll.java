import java.sql.*;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EmployeePayroll {

    /**
     * readEmployeePayrollData method to read database data sequentially and returning the
     * arraylist of employees.
     */
    public List<Double> getEmployeeWithMaxSalary() {
        String jdbcUrl = "jdbc:mysql://localhost:3306/employee_payroll_service";
        String username = "root";
        String password = "superstars";
        /*
        Taking an arraylist of type EmployeePayrollData and adding elements to the list one by one using
        constructor of EmployeePayrollData class.
         */
        List<Double> employeeDataList = new ArrayList<>();
        try {
            System.out.println("Connecting to database " + jdbcUrl);
            /*
            Making connection to the database by giving url,username and password of the database.
             */
            Connection connection = DriverManager.getConnection(jdbcUrl, username, password);
            /*
            If you want to execute a Statement object many times, it usually reduces execution time to use a
             PreparedStatement object instead.In preparedStatement we are execute query for getting data between
             the range of a date 2019-01-01 to the current date.
             */

            PreparedStatement preparedStatement = connection.prepareStatement("select max(salary) from employee_payroll");
        /*
        A ResultSet object is a table of data representing a database result set, which is usually generated by executing
        a statement that queries the database.The object of ResultSet maintains a cursor pointing to a row of a table
        */
            ResultSet resultSet = preparedStatement.executeQuery();

        /*
         Adding name,salary and date of the employee in arraylist while resultSet.next() has elements inside
        */
            while (resultSet.next()) {

                double maxSalary = resultSet.getDouble("max(salary)");
                  /*
                Printing the database tables column with in a particular date range
                 */
                System.out.println(resultSet.getString("max(salary)"));
                employeeDataList.add(maxSalary);
            }
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return employeeDataList;
    }

    public Map<String, Double> averageSalaryByGender() {

        String jdbcUrl = "jdbc:mysql://localhost:3306/employee_payroll_service";
        String username = "root";
        String password = "superstars";
        /*
        Taking a Hashmap of key String gender and value double as avg_salary
         */
        Map<String, Double> genderToAverageSalaryMap = new HashMap<>();
        try {
            System.out.println("Connecting to database " + jdbcUrl);
            /*
            Making connection to the database by giving url,username and password of the database.
             */
            Connection connection = DriverManager.getConnection(jdbcUrl, username, password);
            /*
            If you want to execute a Statement object many times, it usually reduces execution time to use a
             PreparedStatement object instead.In preparedStatement we are execute query for getting data between
             the range of a date 2019-01-01 to the current date.
             */

            String sql = "select gender,avg(salary) as avg_salary from employee_payroll group by gender";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
        /*
        A ResultSet object is a table of data representing a database result set, which is usually generated by executing
        a statement that queries the database.The object of ResultSet maintains a cursor pointing to a row of a table
        */
            ResultSet resultSet = preparedStatement.executeQuery();
/*
         Adding name,salary and date of the employee in arraylist while resultSet.next() has elements inside
        */
            while (resultSet.next()) {

                String gender = resultSet.getString("gender");
                double averageSalary = resultSet.getDouble("avg_salary");
                System.out.println(resultSet.getString("gender"));
                System.out.println(resultSet.getDouble("avg_salary"));
          /*
            Adding the database table in the Hashmap for comparing the expected and actual result
            in junit testCases
             */
                genderToAverageSalaryMap.put(gender, averageSalary);

            }
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return genderToAverageSalaryMap;
    }

}

