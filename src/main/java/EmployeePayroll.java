import java.sql.*;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class EmployeePayroll {

    /**
     * readEmployeePayrollData method to read database data sequentially and returning the
     * arraylist of employees.
     */
    public List<EmployeePayrollData> readEmployeePayrollData() throws EmployeePayrollCustomException {
        String jdbcUrl = "jdbc:mysql://localhost:3306/employee_payroll_service";
        String username = "root";
        String password = "superstars";
        /*
        Taking an arraylist of type EmployeePayrollData and adding elements to the list one by one using
        constructor of EmployeePayrollData class.
         */
        List<EmployeePayrollData> employeePayrollDataList = new ArrayList<>();
        try {
            System.out.println("Connecting to database " + jdbcUrl);
            /*
            Making connection to the database by giving url,username and password of the database.
             */
            Connection connection = DriverManager.getConnection(jdbcUrl, username, password);
            /*
            If you want to execute a Statement object many times, it usually reduces execution time to use a
             PreparedStatement object instead.
             */
            PreparedStatement preparedStatement = connection.prepareStatement("select * from employee_payroll ");
        /*
        A ResultSet object is a table of data representing a database result set, which is usually generated by executing
        a statement that queries the database.The object of ResultSet maintains a cursor pointing to a row of a table
        */
            ResultSet resultSet = preparedStatement.executeQuery();

        /*
         Adding name,salary and date of the employee in arraylist while resultSet.next() has elements inside
        */
            while (resultSet.next()) {

                int employeeId = resultSet.getInt("employee_id");
                String name = resultSet.getString("name");
                double salary = resultSet.getDouble("salary");
            /*
            LocalDate is an immutable date-time object that represents a date, often viewed as year-month-day.
            */
                LocalDate startDate = resultSet.getDate("startDate").toLocalDate();
                employeePayrollDataList.add(new EmployeePayrollData(employeeId, name, salary, startDate));

            }
            connection.close();
        } catch (Exception e) {
            throw new EmployeePayrollCustomException("Error while reading the database");
        }
        return employeePayrollDataList;
    }


    public List<EmployeePayrollData> updateSalary(String name, double salary) throws EmployeePayrollCustomException {

        String jdbcUrl = "jdbc:mysql://localhost:3306/employee_payroll_service";
        String username = "root";
        String password = "superstars";
        List<EmployeePayrollData> employeePayrollDataList = new ArrayList<>();
        try {
            System.out.println("Connecting to database " + jdbcUrl);
            /*
            Making connection to the database by giving url,username and password of the database.
             */
            Connection connection = DriverManager.getConnection(jdbcUrl, username, password);


            String query = "update employee_payroll set salary= ? where name= ?";
             /*
            If you want to execute a Statement object many times, it usually reduces execution time to use a
             PreparedStatement object instead.
             */
            PreparedStatement preparedStatement = connection.prepareStatement(query);
        /*
        First element is the parameterIndex in preparedStatement.setInt and second element is what we have to set
        at first question mark there is set salary and Second question mark states where there is name teresa.
         */
            preparedStatement.setDouble(1, salary);
            preparedStatement.setString(2, "name");
            preparedStatement.executeUpdate();

        /*
        Reading file after updating  the data in the database using resultSet  object
         */
            String sql = "select * from employee_payroll";
 /*
        A ResultSet object is a table of data representing a database result set, which is usually generated by executing
        a statement that queries the database.The object of ResultSet maintains a cursor pointing to a row of a table
        */
            ResultSet resultSet = preparedStatement.executeQuery(sql);

        /*
         Adding name,salary and date of the employee in arraylist while resultSet.next() has elements inside
        */

            while (resultSet.next()) {
                int employeeId = resultSet.getInt("employee_id");
                String Name = resultSet.getString("name");
                double Salary = resultSet.getDouble("salary");
            /*
            LocalDate is an immutable date-time object that represents a date, often viewed as year-month-day.
            */
                LocalDate startDate = resultSet.getDate("startDate").toLocalDate();
                employeePayrollDataList.add(new EmployeePayrollData(employeeId, Name, Salary, startDate));
            }
            connection.close();

        } catch (Exception e) {
        /*
        Throwing the custom exception if got error while updating salary
         */
            throw new EmployeePayrollCustomException("Error while updating the salary");

        }
        return employeePayrollDataList;
    }

}
