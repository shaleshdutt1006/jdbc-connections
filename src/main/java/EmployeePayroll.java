import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import java.sql.*;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;

public class EmployeePayroll {
    /**
     * readEmployeePayrollData method to read database data sequentially and returning the
     * arraylist of employees
     */
    public List<EmployeePayrollData> readEmployeePayrollData() {
        String jdbcUrl = "jdbc:mysql://localhost:3306/employee_payroll_service";
        String username = "root";
        String password = "superstars";
        /*
        Taking an arraylist of type EmployeePayrollData and adding elements to the list one by one using
        constructor of EmployeePayrollData class
         */
        List<EmployeePayrollData> employeePayrollDataList = new ArrayList<>();
        try {
            System.out.println("Connecting to database " + jdbcUrl);
            /*
            Making connection to the database by giving url,username and password of the database.
             */
            Connection connection = DriverManager.getConnection(jdbcUrl, username, password);
            /*
            If you want to execute a Statement object many times, it usually reduces execution time to use a
             PreparedStatement object instead.
             */
            PreparedStatement preparedStatement = connection.prepareStatement("select * from employee_payroll ");
        /*
        A ResultSet object is a table of data representing a database result set, which is usually generated by executing
        a statement that queries the database.The object of ResultSet maintains a cursor pointing to a row of a table
        */
            ResultSet resultSet = preparedStatement.executeQuery();

        /*
         Adding name,salary and date of the employee in arraylist while resultSet.next() has elements inside
        */
            while (resultSet.next()) {
                int employeeId = resultSet.getInt("employee_id");
                String name = resultSet.getString("name");
                double salary = resultSet.getDouble("salary");
            /*
            LocalDate is an immutable date-time object that represents a date, often viewed as year-month-day.
            */
                LocalDate startDate = resultSet.getDate("startDate").toLocalDate();
                employeePayrollDataList.add(new EmployeePayrollData(employeeId, name, salary, startDate));
            }
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return employeePayrollDataList;
    }

}
